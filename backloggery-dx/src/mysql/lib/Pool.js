var mysql=require("../"),Connection=require("./Connection"),EventEmitter=require("events").EventEmitter,Util=require("util"),PoolConnection=require("./PoolConnection");function Pool(n){EventEmitter.call(this),this.config=n.config,this.config.connectionConfig.pool=this,this._acquiringConnections=[],this._allConnections=[],this._freeConnections=[],this._connectionQueue=[],this._closed=!1}function spliceConnection(n,o){var e;-1!==(e=n.indexOf(o))&&n.splice(e,1)}module.exports=Pool,Util.inherits(Pool,EventEmitter),Pool.prototype.getConnection=function(n){if(this._closed){var o=new Error("Pool is closed.");return o.code="POOL_CLOSED",void process.nextTick((function(){n(o)}))}var e,i=this;return this._freeConnections.length>0?(e=this._freeConnections.shift(),void this.acquireConnection(e,n)):0===this.config.connectionLimit||this._allConnections.length<this.config.connectionLimit?(e=new PoolConnection(this,{config:this.config.newConnectionConfig()}),this._acquiringConnections.push(e),this._allConnections.push(e),void e.connect({timeout:this.config.acquireTimeout},(function(o){if(spliceConnection(i._acquiringConnections,e),i._closed&&((o=new Error("Pool is closed.")).code="POOL_CLOSED"),o)return i._purgeConnection(e),void n(o);i.emit("connection",e),i.emit("acquire",e),n(null,e)}))):void(this.config.waitForConnections?this._enqueueCallback(n):process.nextTick((function(){var o=new Error("No connections available.");o.code="POOL_CONNLIMIT",n(o)})))},Pool.prototype.acquireConnection=function(n,o){if(n._pool!==this)throw new Error("Connection acquired from wrong pool.");var e=this._needsChangeUser(n),i=this;function t(t){if(spliceConnection(i._acquiringConnections,n),i._closed&&((t=new Error("Pool is closed.")).code="POOL_CLOSED"),t)return i._connectionQueue.unshift(o),void i._purgeConnection(n);e&&i.emit("connection",n),i.emit("acquire",n),o(null,n)}this._acquiringConnections.push(n),e?(n.config=this.config.newConnectionConfig(),n.changeUser({timeout:this.config.acquireTimeout},t)):n.ping({timeout:this.config.acquireTimeout},t)},Pool.prototype.releaseConnection=function(n){if(-1===this._acquiringConnections.indexOf(n)){if(n._pool){if(n._pool!==this)throw new Error("Connection released to wrong pool");if(-1!==this._freeConnections.indexOf(n))throw new Error("Connection already released");this._freeConnections.push(n),this.emit("release",n)}this._closed?this._connectionQueue.splice(0).forEach((function(n){var o=new Error("Pool is closed.");o.code="POOL_CLOSED",process.nextTick((function(){n(o)}))})):this._connectionQueue.length&&this.getConnection(this._connectionQueue.shift())}},Pool.prototype.end=function(n){this._closed=!0,"function"!=typeof n&&(n=function(n){if(n)throw n});var o=!1,e=0;function i(i){!o&&(i||--e<=0)&&(o=!0,n(i))}for(;0!==this._allConnections.length;)e++,this._purgeConnection(this._allConnections[0],i);0===e&&process.nextTick(i)},Pool.prototype.query=function(n,o,e){var i=Connection.createQuery(n,o,e);return"object"==typeof n&&"typeCast"in n||(i.typeCast=this.config.connectionConfig.typeCast),this.config.connectionConfig.trace&&(i._callSite=new Error),this.getConnection((function(n,o){if(n)return i.on("error",(function(){})),void i.end(n);i.once("end",(function(){o.release()})),o.query(i)})),i},Pool.prototype._enqueueCallback=function(n){if(this.config.queueLimit&&this._connectionQueue.length>=this.config.queueLimit)process.nextTick((function(){var o=new Error("Queue limit reached.");o.code="POOL_ENQUEUELIMIT",n(o)}));else{var o=process.domain?process.domain.bind(n):n;this._connectionQueue.push(o),this.emit("enqueue")}},Pool.prototype._needsChangeUser=function(n){var o=n.config,e=this.config.connectionConfig;return o.user!==e.user||o.database!==e.database||o.password!==e.password||o.charsetNumber!==e.charsetNumber},Pool.prototype._purgeConnection=function(n,o){var e=o||function(){};"disconnected"===n.state&&n.destroy(),this._removeConnection(n),"disconnected"===n.state||n._protocol._quitSequence?process.nextTick(e):n._realEnd(e)},Pool.prototype._removeConnection=function(n){n._pool=null,spliceConnection(this._allConnections,n),spliceConnection(this._freeConnections,n),this.releaseConnection(n)},Pool.prototype.escape=function(n){return mysql.escape(n,this.config.connectionConfig.stringifyObjects,this.config.connectionConfig.timezone)},Pool.prototype.escapeId=function(n){return mysql.escapeId(n,!1)};